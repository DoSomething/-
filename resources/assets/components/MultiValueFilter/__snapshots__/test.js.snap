// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders a list of tags 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="container__block -third"
  >
    <h2
      className="heading -delta"
    >
      Tags
    </h2>
    <ul
      className="aligned-actions"
    />
  </div>,
  "nodes": Array [
    <div
      className="container__block -third"
    >
      <h2
        className="heading -delta"
      >
        Tags
      </h2>
      <ul
        className="aligned-actions"
      />
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MultiValueFilter
        header="Tags"
        options={
          Object {
            "type": "tags",
            "values": Object {
              "good-photo": Object {
                "active": false,
                "label": "Good Photo",
              },
              "good-quote": Object {
                "active": false,
                "label": "Good Quote",
              },
            },
          }
        }
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MultiValueFilter {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleClick": [Function],
        "props": Object {
          "header": "Tags",
          "options": Object {
            "type": "tags",
            "values": Object {
              "good-photo": Object {
                "active": false,
                "label": "Good Photo",
              },
              "good-quote": Object {
                "active": false,
                "label": "Good Quote",
              },
            },
          },
        },
        "refs": Object {},
        "state": Object {},
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="container__block -third"
        >
          <h2
            className="heading -delta"
          >
            Tags
          </h2>
          <ul
            className="aligned-actions"
          />
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="container__block -third"
        >
          <h2
            className="heading -delta"
          >
            Tags
          </h2>
          <ul
            className="aligned-actions"
          />
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MultiValueFilter
    header="Tags"
    options={
      Object {
        "type": "tags",
        "values": Object {
          "good-photo": Object {
            "active": false,
            "label": "Good Photo",
          },
          "good-quote": Object {
            "active": false,
            "label": "Good Quote",
          },
        },
      }
    }
  />,
}
`;
